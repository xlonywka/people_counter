/* Библиотека для поддержания чистоты помещения с подсчетом количества людей в комнате
 * Свежая версия на GitHub: https://github.com/xlonywka/people_counter
*/
#include "xlonywka_PeopleCounter.h"

Room hall(2, 3, 4);
/*  Аргументы:
 *  (датчик 1, датчик 2, реле, режим(light/eco), кнопка ручного режима, фоторезистор(аналоговый PIN), порог фоторезистора)
 *  light - освещение, eco - вентиляция или кварцеватель
 *  не обязательно указывать все аргументы:
 *  если вы не хотите ставить кнопку руч. реж., но хотите фоторезистор - подключите к соответствующему пину кнопки +5В
 *  и система будет постоянно в автоматическом режиме
 *  если вы не хотите ставить фоторезистор - не вводите два последних аргумента
 *  если вы не хотите ставить и кнопку, и фоторезистор - не вводите последние три аргумента 
 */
Room kitchen(6, 7, 8, 9); //кухня - работает без использования фоторезистора но с ручным режимом
Room toilet(10, 11, 12);  //туалет - работает всегда в автоматическом режиме без фоторезистора

void setup() 
{
  hall.begin();     //инициализация PIN-ов
  kitchen.begin();
  toilet.begin();
  //hall.debug(1);  //режим отладки (для включения - убрать комментарий, вывод в Serial)
  Serial.begin(9600);
}
void loop() 
{
  hall.statusControl();      //контроль освещения в комнате (должен быть всегда в loop)
  kitchen.statusControl();
  toilet.statusControl();

  //ПРИМЕЧАНИЕ: Любой вывод в Serial используйте только при отладке! 
  
  //Serial.print("Hall:" + String(hall.getCountPeople()));          //метод возвращает количество человек в этой комнате
  //Serial.println(" Hall Status:" + String(hall.getStatusRoom()));   //метод возвращает 1 - вкл, 0 - выкл в этой комнате
}
